- hosts: master
  tasks:
    - name: Determine latest stable version of Kubernetes
      shell: curl -sSL https://dl.k8s.io/release/stable.txt
      register: stable_ver
      changed_when: False
      args:
        warn: False

    - name: Get current K8s version
      shell: kubectl version | grep Server | awk '{print $5}' | cut -d '"' -f2
      changed_when: False
      register: current_version

    - name: Set fact for current version
      set_fact:
        current_version: "{{ current_version.stdout }}"

    - name: Set fact for stable version
      set_fact:
        stable_ver: "{{ stable_ver.stdout }}"

    - name: Print current version
      ansible.builtin.debug:
        var: current_version
        verbosity: 1

    - name: Print stable version
      ansible.builtin.debug:
        var: stable_ver
        verbosity: 1

    - name: Upgrade kubeadm
      apt:
        name: ['kubeadm']
        state: latest
        force: yes
        update_cache: yes
        autoclean: yes
        autoremove: yes
      when: current_version != stable_ver

    - name: Upgrade cluster with kubeadm
      shell: "kubeadm upgrade apply -y {{ stable_ver.stdout }}"
      async: 600
      poll: 5
      when: current_version != stable_ver

    - name: Cordon Hosts
      shell: "kubectl cordon {{ item }}"
      with_items:
        - "{{ groups['all'] }}"
      tags: cordon
      when: current_version != stable_ver

    - name: Drain Hosts
      shell: "kubectl drain {{ item }} --ignore-daemonsets --delete-local-data"
      with_items:
        - "{{ groups['all'] }}"
      ignore_errors: yes
      tags: drain
      when: current_version != stable_ver

- hosts: all
  tasks:
    - name: Upgrade Y'all
      apt:
        name: ['kubelet', 'kubectl']
        state: latest
        force: yes
        update_cache: yes
        autoclean: yes
        autoremove: yes
      when: hostvars[groups['master'][0]]['current_version'] != hostvars[groups['master'][0]]['stable_ver']
      tags:
        - kubelet
        - kubectl

- hosts: master
  tasks:
    - name: Uncordon Hosts
      shell: "kubectl uncordon {{ item }}"
      with_items:
        - "{{ groups['all'] }}"
      tags: uncordon
      when: current_version != stable_ver

- hosts: all
  roles:
    - common